#!/bin/bash
#El comando !/bin/bash indica que el script se ejecutará en bash
#Esto es esencial para scripts que utilizan características
#específicas de Bash que no están disponibles en otros shells
#como sh (Shell estándar de UNIX).

# Limpiar archivos de salida al comienzo
> metrics.txt

TARGET=ex39p
MAX_THREADS=$(nproc)
THREADS=$(seq 1 $MAX_THREADS)
MAX_REPS=10
REPS=$(seq 1 $MAX_REPS)
ORDER=1
#MESH=../data/star.mesh

# Loop para ejecutar comandos
for thread in $THREADS; do
    echo -e "Ejecucion para el thread: $thread\n"
    for Nreps in $REPS; do
        echo -e "Repeticion: $Nreps\n"
        /usr/bin/time -f "%S" mpirun -np $thread --oversubscribe ./$TARGET -o $ORDER  1>> std_out$thread 2>>time$thread.txt
    done
    # Calcular el promedio
    average=$(awk '{ sum += $1 } END { if (NR > 0) print sum / NR }' time$thread.txt)

    # Calcular la desviación estándar
    stdev=$(awk -v avg="$average" '{ sumsq += ($1 - avg)^2 } END { if (NR > 1) print sqrt(sumsq / (NR - 1)) }' time$thread.txt)

    # Guardar el promedio y la desviación estándar en time.txt
    echo "$thread $average $stdev" >> time.txt
done

T1=$(awk 'NR==1 {print $2}' time.txt)
DT1=$(awk 'NR==1 {print $3}' time.txt)
echo "T1: $T1, DT1: $DT1"

# Verificar el contenido de time.txt
echo "Contenido de time.txt:"
cat time.txt

# Asegurarse de que metrics.txt se llena correctamente
echo "Generando metrics.txt"
awk '{
    t1=$1;
    t2=$2;
    dt2=$3;
    Speedup = $T1/t2;
    uncertainty1 = Speedup * sqrt((($DT1/$T1)^2 + (dt2/t2)^2));
    Efficiency = Speedup/t1;
    uncertainty2 = Efficiency * sqrt(((1/t1)^2 + (dt2/t2)^2 + ($DT1/$T1)^2));
    print $1,$T1, ,Speedup, uncertainty1, Efficiency, uncertainty2;
}' time.txt > metrics.txt


echo "Contenido de metrics.txt"
cat metrics.txt


python plot.py

rm std_out* sol* mesh* # time*
